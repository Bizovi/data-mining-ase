I assume you read the conceptual stuff on this website, understood its use-cases, and the big picture of what to learn. Now, the question is **where and how to start** practicing, while catching up on the maths and programming.

::: {.column-margin}
![Decision-Making, ML, and Causal Inference is hard. Practice the fundamentals with patience and care, develop competence. Then, a beautiful world will open up to you!](01_fundamentals/img/karate-kid.webp "Practice"){width="90%"}
:::


There are too many courses, tutorials, and datasets for practicing ML/Stats on the web: from didactic toy examples to industrial-scale machine learning. Since it is so hard to strike a balance between clarity, simplicity, and the use-case being interesting, realistic -- you fill find here a list of **carefully curated resources**. Most of them have have **code**, **data**, and explained **theory** or methodology in a freely available e-book.


There is little point in replicating well-executed examples from other authors, just for the sake of consistency of code and style. I will, however, migrate examples not available in our frameworks or language of choice. Other times we can benefit from a significant improvement over the original presentation or improving code quality.


::: {.callout-tip}
## Right level of granularity

Instead of recommending whole books, which in this field are huge: 500-900p of dense material -- in the listings below, you have them grouped by tool, use-case, in manageable-sized chunks. 

They are ordered and organized in a way which facilitates a more linear, gradual, composable development of skills and understanding. **Think of them as lego pieces.**
:::


I made sure to include interesting examples and archetypal applications for each statistical tool and theoretical topic, so you can immediately apply the concepts you read about or watched during the lectures. However, the responsibility to practice falls entirely on the learner -- I can just do my best to make your journey less frustrating and more efficient.

::: {.column-margin}
Often, you will have to combine various aspects of an use-case, model, method -- from different sources, taking the best from each author.
:::

## Prerequisites: Probability and Python

We start from the foundations of probability, however, I do not cover calculus, linear algebra, or other mathematical tools for data analysis. We do much more programming than mathematics, therefore, the ability to code in a programming language like Python or R is a must.

::: {.callout-warning}
## Need a crash course in probability and statistics?

If you understand and can explain the following ideas in a simple, yet rigorous way  -- you're ready for the journey. Otherwise, if it feels shaky, here are some readings:

- **Probability Triple** and **Random Variables** - a quasi formal introduction is written in [this chapter](https://course.economic-cybernetics.com/01_fundamentals/stat_foundations.html) of the course website. From my experience, not many students have this understanding after their probability theory classes.
- **Collectivity** ("physical" structure), **Statistical Population**, **Sample** - where defining the population is the contract for our experiment, and the sampling process is critical. It is a much more nuanced topic than it looks, explained well and in great detail [here](https://openintro-ims.netlify.app/data-design.html) and [here](https://crumplab.com/statistics/04-SamplesPopulations.html).
- **Parameter** (Estimand), **Estimator**, **Estimation/Statistic** - same resources as above [^4]
- Stories behnid distributions: $Bin(n, \theta), Pois(\lambda), Exp(\lambda), N(\mu, \sigma^2), \chi^2_k, t_k$. What about $Beta(a, b)$, $Gamma(k, \theta)$, and $Dirichlet(\bar{\theta})$ -- what are they good for?
  - Look at some [examples with simulations](https://mathstat.slu.edu/~speegle/_book/probchapter.html#simulationsprob) and [stories / applications with more math](https://drive.google.com/file/d/1VmkAAGOYCTORq1wxSQqy255qLJjTNvBI/view) from Joe Blitzstein.
:::

[^4]: Although the perspective I take is Bayesian, I will take some time to cover and re-contextualize the Neyman-Pearson and Fisherian "frequentism".

## Building Blocks of Bayesian Statistics

We start simple, by modeling a single random variable $Y$, choosing the appropriate distribution for each phenomenon, a prior for the parameters, doing simulations  -- then sampling from the posterior with `pymc`, `numpyro`, and `bambi`.[^1]

[^1]: The R equivalents would be `stan` and `brms`, `rstanarm`. `bambi` and `brms` are a high-level API for most common models.

Limiting? Yes, as in reality we care about the relationship between random variables. However, we can get a lot of insight from thoughtful modeling the data generating process, which will serve as building blocks in more complicated and realistic models.

::: {.callout-note}
## Bayes Rule. Update your beliefs, often!

Any introduction to the subject will work out, a few excellent ones being Chapter 1/2 of [BDA3](http://www.stat.columbia.edu/~gelman/book/), Chapter 1/2 of [Bayes Rules](https://www.bayesrulesbook.com/chapter-2.html), and Chapter 1/2 of [Statistical Rethinking](https://xcelab.net/rm/statistical-rethinking/).[^2] If you prefer videos, enjoy the 3Blue1Brown [visual masterpiece](https://www.youtube.com/watch?v=HZGCoVF3YvM) on how to think like a Bayesian or [here](https://www.coursera.org/learn/statistical-inferences/lecture/R6nV5/bayesian-thinking).

- (BDA3, Ch1): **Football spreads**, that can be estimated from [data about matches](http://www.stat.columbia.edu/~gelman/book/data/football.asc). What is the probability that a team wins? Are experts right, on average?
  - If you're into betting and sports, can you replicate the analysis on other datasets? What are your options for data collection?
  - For brevity, I won't elaborate much from now on, how to take an use-case and example to its limit. **If you're passionate about a particular topic -- go for it!**
- (BDA3, Ch1): **Spelling correction**, based on [empirical frequencies](http://norvig.com/ngrams/) provided by Peter Norvig. As in the previous case-study, you will have to code it up and figure it out for yourself -- it is good for a warm-up, but challenging enough to keep you occupied.
- ([Probability 110](https://projects.iq.harvard.edu/stat110/home)): **Medical testing** for rare diseases, hypothetical example with code in my [course repository](https://github.com/Bizovi/decision-making/blob/main/playground/02_bayes.ipynb). We use the same idea to reason about how confident are we our code has no bugs.
  - If you remember the Covid-19 rapid tests and their confusion matrices printed on instructions, you could've applied the same idea!

For the simplest models, one approach of comparing different hypotheses, is Bayes Factors. However, these do not translate well in practice for more sophisticated, multilevel models. You can look in the following courses [here](https://www.coursera.org/learn/statistical-inferences/supplement/IPkZK/assignment-2-2-bayesian-statistics) and [here](https://www.coursera.org/learn/bayesian/home/week/3) for the theory and examples.
:::

[^2]: You will notice in the callouts that I point out where to read the theory -- for a conceptual understanding and to figure out the mathematical details

[Or maybe you're passionate about biology, where you could apply it for Mendelian genetics and think about the mystery of deadly genes persistence]{.aside}

We applied Bayes rule and got some insightful results in three totally different domains. However, we weren't doing neither statistics, nor inference -- but got into the right mindset. It is a good opportunity to brush off the shelves some computational and mathematical tools. Now it's time for full-luxury Bayes and the simplest cases of inference.


::: {.callout-note}
## Beta-Binomial Model. Estimating proportions

I know, I know, the coin-tossing -- simple, yet fundamental and found anywhere there is a binary outcome $Y_i \in \{0, 1\}$. There are many ways to estimate the success probability $\theta$, when we observe $k$ successes from $n$ trials.

- [In Bayes' Rules](https://www.bayesrulesbook.com/chapter-3.html) is a detailed exposition of the theory, with examples about Michelle's election support and Milgram's experiment.
- Share of biking traffic in different neighborhoods (BDA3, Ch2, Pr. 8)
- A/B Testing for proportions in [BMH](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter2_MorePyMC/Ch2_MorePyMC_PyMC_current.ipynb). Just remember that experiment design is much more nuanced than performing such inference or a test.
- Political attitudes in 2008 Election [data](http://www.stat.columbia.edu/~gelman/book/data/) (BDA3, Ch2, Pr. 21)
- Proportion of female births, given prior information. (BDA3, Ch2)

There are many more applications, but the ones below require more research and work. They are open ended and you can take these topics very far.

- The debate on the hot hand phenomenon is not yet over. [Here](https://blogs.cornell.edu/info2040/2018/11/29/hothand/) are the [bayesians weighting in](https://statmodeling.stat.columbia.edu/2015/07/09/hey-guess-what-there-really-is-a-hot-hand/) and some [new research](https://www.thecut.com/2016/08/how-researchers-discovered-the-basketball-hot-hand.html).
- Basketball shot percentages and true shooting, brilliantly explained by [thinking basketball](https://youtube.com/playlist?list=PLtzZl14BrKjTJZdubjNEY5jU0fGOiy51x) in a playlist about NBA statistics.
- Important problem in ecology: estimating size of population based on samples (BDA3, Ch3, Pr. 6). The challenge is that in $Bin(\theta, N)$ both parameters are unknown. Here is an [old paper](https://pluto.huji.ac.il/~galelidan/52558/Material/Raftery.pdf).
- Confidence intervals and [lower bound](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter4_TheGreatestTheoremNeverTold/Ch4_LawOfLargeNumbers_PyMC_current.ipynb) for reddit posts like/dislike ratio. Read more about simple ranking algorithms and the issues of sample size: [reddit](https://www.evanmiller.org/how-not-to-sort-by-average-rating.html), [hacker news](https://news.ycombinator.com/item?id=1781013). It is a good opportunity to work with the reddit API in order to collect data about posts and comments.
:::

The next step is learning how to model count data, which will open up to us applications of a different flavor. It is not a coincidence that when learning linear regression, we will extend it to poisson and logistic regression.

[You can notice how the issues of sample size creep in, as well as how to properly model variation within and between groups. I recommend you look up again the CLT, in the next section]{.aside}

Note that **prior choice** and justification is an art and science: you will have to learn and practice how to articulate assumptions and encode your domain knowledge into the priors. There is no universal recipe, but there are some guiding principles.


::: {.callout-note}
## Poisson Distribution. Gamma-Poisson Model

Counts of independent events in a unit of (space/time/...), with a low probability. You can review the maths [here](https://www.bayesrulesbook.com/chapter-5.html#gamma-poisson-conjugate-family). Below is a list of applications you can practice on:

- Deaths by horses in Prussian Army. Here is the [historical data](https://rpubs.com/SmilodonCub/567089) and a [blog post](https://towardsdatascience.com/poisson-distribution-from-horse-kick-history-data-to-modern-analytic-5eb49e60fb5f) if you need a refresher on Poisson distribution.
- Asthma mortality (BDA3, Ch2)
- [Airplane fatal accidents](https://www.briancallander.com/posts/bda3/chapter_02_exercise_13.html) and passenger deaths
- Estimating WWII [production of German](https://en.wikipedia.org/wiki/German_tank_problem#Bayesian_analysis) tanks based on samples captured
- Comparing football teams and [goals in football matches](https://allendowney.github.io/ThinkBayes2/chap08.html)
- [Comparing birth rates](https://allendowney.github.io/ThinkBayes2/hospital_birth_rate.html) in two hospitals

Check out the link functions for more sophisticated models. Also, in the examples above, we estimate the groups separately (corresponding to no pooling) -- there are better ways. Also, you will see a poisson example of how to take into account the sample size 
:::

The next examples are a little detour, to appreciate the flexibility of the modeling approach we're taking. We're building upon previous models, by inferring which rate $\lambda_1$ or $\lambda_2$ is the most plausible at a given point in time. This way, we add complexity and realism to the model, by incorporating knowledge about the phenomenon we're interested in.

[Ideally, we would leverage models which work well with time-series, like Hidden Markov Models. There is also a large literature in mining subsequences in a time series.]{.aside}

::: {.callout-tip}
## Poisson changepoint detection

Estimating rates, modeling a structural shift/change is a relevant, challenging, and unsolved problem in many fields. The models below are too simplistic to be useful in practice, but they capture the essence of real dynamics: things change not only continuously, but also structurally.

- [Coal Mining disasters](https://www.pymc.io/projects/docs/en/stable/learn/core_notebooks/pymc_overview.html#case-study-2-coal-mining-disasters), pymc
- [Text Messages](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter1_Introduction/Ch1_Introduction_PyMC_current.ipynb), pymc
- [U.S. School Shootings](https://sidravi1.github.io/blog/2018/05/22/what-happened-in-2006), is there an increase in attempts and occurences?
:::

By now, you encountered many simple Bayesian models, so it's useful to contrast it with the Fisherian and Neyman-Pearson (frequentist) approaches. The motivation is simple: the likelihood approach is widely used in Machine Learning (and Statistical Learning) teaching and practice. A nuanced understanding of frequentist methods will improve the way you ask statistical questions, perform and design experiments.

[In the courses I teach, I dedicate quite a lot of time on how not to fall into the most common pitfalls when applying frequentist methods. It's an useful skill when critically reading the literature.]{.aside}

When we get to the topic of A/B testing and experiment design, we will unavoidably stumble upon a few fascinating philosophical questions in relation to the nature of evidence. A quick overview of the below resources will give you most background you need to understand the heck those philosophical positions are about.

::: {.callout-note}
## Bayesian vs Frequentist vs Fisherian Inference

- I like very much the following metaphor, explained [here](https://www.coursera.org/learn/statistical-inferences/lecture/qC3A1/frequentism-likelihoods-bayesian-statistics), of looking at these 3 approaches as a: Path of Action, Path of Devotion, Path of Knowledge.
- Watch this [lecture](https://www.youtube.com/watch?v=LYcu3LoGqKc) by Zoltan Dienes to get a sense of the orthodox, Neyman-Pearson approach: its power and limitations.
- Likelihood - either from previous books or [this interactive visualization](https://rpsychologist.com/likelihood/). You can use the [lecture and lab](https://www.coursera.org/learn/statistical-inferences/lecture/8yZDk/likelihoods) from TU Eindhoven courses mentioned below.
- Bayesian vs Frequentist inference - [chapter 2, 3, 4](https://hastie.su.domains/CASI_files/PDF/casi.pdf) in Computer Age Statistical Inference. This [lecture](https://www.youtube.com/watch?v=NHFfJEvzPIo) by Zoltan Dienes contrasts Bayes Factors vs classical methods in t-test situations.
- The best teaching of (mostly) frequentist statistics I know of is in these two courses by TU Eindhoven and it is well worth your time:
  - Improving your statistical questions, [coursera](https://www.coursera.org/learn/improving-statistical-questions)
  - Improving your statistical inferences, [coursera](https://www.coursera.org/learn/statistical-inferences)
:::


We already worked with multiple parameters, even touching upon the relationship between two variables: counts and time $Y_t$, but not really -- it's more helpful to think about that in terms of stochastic processes. Therefore, we need a new tool, which is a link function, a nonlinear transformation $g(x)$ which maps $X$ to the correct support of $Y$. I recommend to introduce this before jumping into linear regression (LR), in order not to have the (flawed) impression that the LR is the only game in the town.

::: {.callout-tip}
## Link functions. Golf case-study

The domain/geometry inspired, custom model is presented in [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/putting_workflow.html) version, [stan](https://mc-stan.org/users/documentation/case-studies/golf.html) by Andrew Gelman, and [stan](https://avehtari.github.io/ROS-Examples/Golf/golf.html) by Aki Vehtari. It is modeling the relationship between distance and the probability of put, which is nonlinear and the sigmoid function won't work well for this case.
:::

::: {.column-margin}
This is an appropriate point to introduce linear regression and logistic regression. It is not too early, given the importance of those tools, however the presentation should be practical and pretty high level, as there is much nuance to deep-dive later.
:::

Of course, we cannot forget about the Normal/Gaussian distribution, which is so prevalent in nature and pops up everywhere in the statistical practice. It is the building block of many following models. Remember the key idea of the expectation of independent random variables and estimating the mean from samples. Also, keep in mind any time you're doing regression that it's all about the conditional expectation $\mathbb{E}_\theta[Y|X=x]$.

::: {.callout-note}
## InverseGamma-Normal

- You can find the theory and mathematical exposition in Bayes Rules, with a case-study of football concussions [study](https://www.bayesrulesbook.com/chapter-5.html#normal-normal-conjugate-family)
- Speed of light experiment (BDA3, Ch3), [data](http://www.stat.columbia.edu/~gelman/book/data/). You will find here and in any statistics textbook the cases of known and unknown variance, and how the $t_k$ test is derived from the first principles.
- As in the case of proportions, we can use the model above to model the difference between the means of two independent groups.

TODO: more examples from science, business, and human behavior
:::



## Groups and Partial Pooling

We already worked with groups in the case of difference in means (proportions and continuous variables) and making inferences for three and more groups, treating them as separate. We will see that such an approach is called "no pooling".

In the traditional teaching of statistics, the above would be covered by t-test, tests for proportions, and when it comes to groups, by ANOVA. If you were lucky, these would've been treated as particular versions of linear regression, like in "Most common statistical tests are linear models".

::: {.column-margin}
One more reason for this is that groups and categorical variables do not receive the deserved, nuanced exposition in linear regression. Also, comparing groups is so widespread, that having a tool to deal with the challenges which it poses is immediately useful in your practice inside any firm.
:::

In this section, the goal is to show the idea of hierarchical models and **partial pooling**. I agree with BDA3 approach to teach it before regression, as the latter needs a lot of nuance and a long time to learn to apply properly.

::: {.callout-note}
## Beta-Binomial for groups. Normal Approximation

There is no point in repeating all from the first section, as it is straightforward to apply for groups, as you'll see when we compare it with a hierarchical approach. 

However, it is a good chance for a frequentist detour, to the Agresti-Coull confidence intervals, $\chi^2$ tests of independence, and nonparametric tests for proportions in multiple groups.

- Erica Ma has a great [talk](https://youtu.be/Pt37qA351yk) for hypothesis testing for 2+ groups.
- I think the authoritative resource on Bayesian versions of the distribution-free methods for hypothesis testing is "Bayesian Statistics for Experimental Scientists", found [here](https://mitpress.mit.edu/9780262044585/bayesian-statistics-for-experimental-scientists/). Unfortunately, it is expensive, so I suggest you look at the table of contents and search for the implementations elsewhere.
:::

Foreshadowing the module 2b on A/B testing is the topic of Multi-Armed Bandits. There are cases in which we are testing multiple groups, e.g. which images to show on the website, and we do it at scale. Moreover, we want to experiment countinuously and automatically, trading off between exploration and exploitation to maximize the payoff or minimize regret. 

[MABs are a big topic in itself, and a very narrow, particular example of reinforcement learning. It can be very powerful when carefully designed and applied appropriately.]{.aside}

::: {.callout-tip}
## A/B Testing and Multi-Armed Bandits

I suggest you start from the didactic examples in Bayesian Methods for Hackers, [Chapter 6](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter6_Priorities/Ch6_Priors_PyMC_current.ipynb). If you have an use-case in which this fits perfectly, you can check out the theory and more variants to implement it in more specialized resources.
:::

We encountered the problem of sample size when ranking reddit posts, but it deserves a few lectures in itself. Once you master a few methods of reasoning about $n$, you can cut through so much bullshit in media, research, and literature. 

::: {.callout-tip}
## The most dangerous equation

I think that ["The most dangerous equation"](http://assets.press.princeton.edu/chapters/s8863.pdf) is a must read for anyone, not just practicing scientists and statisticians. You can see below two resources for the mathematical background of LLT, CLT, and some key properties of estimators.

- Central Limit Theorem (Kolmogorov), deMoivre - the most dangerous equation. Asymptotics. [the theorem and simulations here](https://mathstat.slu.edu/~speegle/_book/SimulationRV.html#centrallimittheorem)
- Estimator properties: Bias, Consistency, Efficiency - you can find an accessible explanation with R code in [openforecast](https://openforecast.org/sba/estimatesProperties.html)

Continuing on the reddit examples, there are some amazing case-studies in the "Calling Bullshit" website and book. One of them is exactly such a ranking problem: [best barbecue in the states](https://www.callingbullshit.org/case_studies/case_study_barbecue.html). I recommend you watch the whole playlist and work through the case studies: it is fun and an essential skill -- to call out the bullshit.
:::

For the continuity with the previous "Building Blocks" section, here are a few example for groups, where the dependent variable is following the Poisson distribution. In this case, the novelty is choosing a gamma prior based on the sample size information of each group. If you think we can do better than this trick -- you're totally right.

::: {.callout-note}
## Gamma-Poisson for groups

The models become more complicated as we attempt to estimate parameters for **each group** of $n$ observations:

- Kidney Cancer rates, with priors chosen in accordance to the sample size (BDA3, Ch2). [An R visualization](https://robinryder.wordpress.com/2019/09/13/reproducing-the-kidney-cancer-example-from-bda/)
- [Guns and suicides](https://sidravi1.github.io/blog/2018/06/15/empirical-and-hierarchical-bayes), with ideas from empirical and hierarchical Bayes.
:::

::: {.column-margin}
Just as a remark, **complete pooling** is when we ignore the fact that we have groups, and make one, global estimate. Of course, it would fall in the category of underfitting or model mis-specification, if the categories or groups are relevant.
:::

Finally, we're ready to see how partial pooling and hierarchical (multilevel) models are such an important and powerful innovation, to the point where some practitioners argue (and I agree), that it should be the default way of (regression) modeling. Meaning, a strong justification is needed why your model doesn't need that structure or modeling of heterogeneity. Keep in mind this advice, but always start with the most simple models when iterating towards the final one.

::: {.callout-note}
## Hierarchical Models for Groups
 
**Gaussian**. The main example is a classic: modeling the level of radon in houses on the first floor and basement, where the groups are counties (BDA3). We will see this example again in the Hierarchical GLMs section, where predictors at house-level and county-level are added.

- [Omar Sosa - Practical introduction to Bayesian hierarchical modeling](https://github.com/omarfsosa/tech-talk-hierarchical-models) with numpyro, focuses on exactly the idea we need.
- Primary code reference: [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/multilevel_modeling.html) - A Primer on Bayesian Methods for Multilevel Modeling

**Beta-Bionmial** examples:

- Eric Ma tutorial at pycon, about [baseball batting](https://bambinos.github.io/bambi/notebooks/hierarchical_binomial_bambi.html), and the equivalent [numpyro code](https://num.pyro.ai/en/stable/examples/baseball.html). Another baseball example is a [classic by Efron](https://www.pymc.io/projects/examples/en/latest/case_studies/hierarchical_partial_pooling.html), implemented in pymc.
- Police shooting training -- detecting race bias. A full Bayesian workflow in [bambi](https://bambinos.github.io/bambi/notebooks/shooter_crossed_random_ANOVA.html).
- Another classic example is about Rat Tumors experiment, implemented in [pymc](https://www.pymc.io/projects/examples/en/latest/generalized_linear_models/GLM-hierarchical-binomial-model.html), from BDA3, Ch5.

A great **Gamma-Poisson** example is presented by Richard McElreath in Statistical Rethinking lectures: "Starbucks coffee-shops waiting time in queue".

:::


One of my favorite business applications of the ideas outlined in this section, is in the seemingly innocent problem of computing the lifetime value of a customer. Just to show how tricky this problem is, there is a niche, but extensive literature on the probem, starting from 2000-2005 by Rossi, Fader, and Hardie, which is entering into the mainstream only now, by 2020-2023.

::: {.column-margin}
The below is by far not the only model: there are versions for contractual and non-contractual settings with different assumptions. The culmination of this research, in my opinion, is Eva Ascarza's 2013 [paper](http://www.evaascarza.com/ascarza_hardie_13.pdf).
:::

::: {.callout-tip}
## Estimating Customer Lifetime Value

Model: Combining Gamma-Poisson and Beta-Binomial, with parameters at customer level. The math and code in pymc3 can be found [here](https://sidravi1.github.io/blog/2018/07/08/fader-hardie-clv).
:::


## Gaussian Linear Regression

There is a converging consensus that Linear Regression is the most important thing to master in statistics. I mean it in the most general sense -- not only knowing model details, assumptions, extensions and limitations, but how to use it effectively in practice in an end-to-end workflow.

[To avoid naming confusions in the context of GLMs we're going to study, and the fact that Regression can be done by many classes of models, I call the good old Linear Regression -- "Gaussian Linear Regression"]{.aside} 

::: {.callout-note}
## Examples. Introduction to the workflow

I highly recommend the (freely available) book "Regression and Other Stories", by Andrew Gelman, Jennifer Hill and Aki Vehtari. The latter has a [course website](https://avehtari.github.io/ROS-Examples/) for this book, with the examples coded in stan.

Also, the second resource, which I would say is even beter, takes on the perspective of causal inference from the very beginning of studying regression. In the [course homepage](https://xcelab.net/rm/statistical-rethinking/) you will find links to the pymc port, slides, and video lectures from 2023.

- Eugene-Springfield community sample data: OCEAN personality traits as related to drug usage -- no categorical variables, $Y$ distribution normal-ish. Demo in [bambi](https://bambinos.github.io/bambi/notebooks/ESCS_multiple_regression.html).
- Educational outcomes for hearing-impaired children, in [pymc](https://www.pymc.io/projects/docs/en/stable/learn/core_notebooks/pymc_overview.html#case-study-1-educational-outcomes-for-hearing-impaired-children)
- Dangers of spurious correlation and accounting for them are displayed in the [marriages and waffles](https://num.pyro.ai/en/stable/tutorials/bayesian_regression.html) example by McElreath -- written in numpyro, but there is also a pymc version.
- [pymc moderation analysis](https://www.pymc.io/projects/examples/en/latest/case_studies/moderation_analysis.html): muscle mass and age
- This case study about 100m runs from Calling Bullshit, shows the [dangers of extrapolation](https://www.callingbullshit.org/case_studies/case_study_gender_gap_running.html) beyond the range of $X$ that the models were trained on.
:::

I have a third favorite book, which is freely available, called "Beyond Multiple Linear Regression". It covers all that we discuss here, but from a frequentist perspective. Despite that, the examples are amazing and it has enough of theory to make it a self-contained resource -- therefore, makes a perfect candidate for a port in pymc/numpyro. For a review of linear regression, take a look at the [Kentucky derby horse race](https://bookdown.org/roback/bookdown-BeyondMLR/ch-MLRreview.html).

::: {.callout-tip}
## Common statistical tests are linear models

Now, once you got the absolute basics of regression, it's important to realize that a lot of seemingly unrelated statistical tests in frequentist statistics are particular versions of linear models[^tests-lr].

- [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/BEST.html) - Krutsche fake data drug trial, t-test, [bambi](https://bambinos.github.io/bambi/notebooks/t-test.html). 
- [Common statistical tests are linear models](https://lindeloev.github.io/tests-as-linear/#1_the_simplicity_underlying_common_tests) and the [python port](https://www.georgeho.org/tests-as-linear/) 
:::

[^tests-lr]: This will instantly systematize the zoo of tests, when to use them and what they do. DO NOT TRY TO MEMORIZE THEM! Instead, think very carefully about your use-case.

Up until this point we took the sampling from the posterior provided by the probabilistic programming languages for granted, as magically converging to the true distribution. We also used very rudimentary methods of comparing models (via Bayes Factors). 

However, things go wrong in practice all the time: poorly specified and parametrized models lead to computational problems. It is important to be able to diagnose the chains, and even more, actively critique and interogate your models. At some point, you have to get an understanding of what MCMC, HMC does under the hood -- and when you would trade off the accuracy for faster, approximate inference.


::: {.callout-tip}
## Splines and Nonlinear Transformations

The linearity assumption in linear regression is often under-emphasized, as pointed out by the trio of RoS in a [podcast episode](https://learnbayesstats.com/episode/20-regression-and-other-stories-with-andrew-gelman-jennifer-hill-aki-vehtari/). Linear Models are linear in parameters, but we should always think of the appropriate transformations of $y$ and $X$.

- [Splines](https://bayesiancomputationbook.com/markdown/chp_05.html#id36) from Osvaldo Martin, on Bike Ridership (UCI data, bike sharing)
- [Splines](https://www.pymc.io/projects/examples/en/latest/case_studies/spline.html), from Statistical Rethinking, on Cherry Blossoms Data
- Be careful and recognize when you should be using a log-log model, expecially since power laws are so widespread in nature and human behavior.
:::

[There are objections to the Bias-Variance decomposition when seen as a tradeoff, in the context of Deep Learning -- however, in the most general sense, it is a universal problem not only in statistics, but also for human cognition.]{.aside}

By introducing splines and nonlinear transformations, we can easily increase the dimensionality of $X$, with respect to $n$ -- which causes massive problems for inference. This is the appropriate moment to introduce a fundamental tradeoff between model complexity and out-of-sample predictive performance. 



::: {.callout-important}
## Model Critique and Evaluation

Checking domain and modeling assumptions, critiquing the models we build are one of the most difficult aspect of statistical practice. It is hard to give a tutorial for this, so I just suggest you read Richard McElreath's Statistical Rethinking chapters on this topic, along with the more theoretical BDA3, Part II.

- For an intuitive process which can structure your modeling and critique, I suggest McElreath's "Drawing the Bayesian Owl".
- [Chapter 2](https://bayesiancomputationbook.com/markdown/chp_02.html) of Bayesian Computation in Python, by Osvaldo Martin (BCP) is one of the best at exemplifying these concepts.
- Prior and posterior checks [pymc docs](https://www.pymc.io/projects/docs/en/stable/learn/core_notebooks/posterior_predictive.html#posterior-predictive)
- An end-to-end example in BCP, modeling the [flight delays](https://bayesiancomputationbook.com/markdown/chp_09.html).

The frequentists and statistical learning approach have well-established tools for asessing the out-of-sample predictive performance. The fact that training is fast, they can easily use cross-validation and even bootstrap. A recent innovation in Bayes is LOO-PIT, an approximation to leave-one-out cross-validation, which leverages the fact that we have posterior sampling.

- A reminder of bootstrap, that is what the frequentists might do - [chapter 10](https://hastie.su.domains/CASI_files/PDF/casi.pdf) or [page 249](https://hastie.su.domains/Papers/ESLII.pdf). It is a powerful tool to have in your arsenal anyways.
- [Here](https://bayesiancomputationbook.com/markdown/chp_11.html#loo-in-depth) are the technical details of LOO-PIT, in the context of model comparison.

:::

Once we are able to critique and evaluate a single model, it makes perfect sense to compare models of increasing complexity and with alternative assumptions. The following uses the same tools as before, but in a iterative workflow.

::: {.callout-note}
## Model Comparison and Selection

- [pymc](https://www.pymc.io/projects/examples/en/latest/generalized_linear_models/GLM-model-selection.html). - Model selection with fake data and polynomials
- Chapter 3 and 4 of BCP are beautiful, where linear and logistic regression are introduced, along with questions of interactions, nonlinear transformations, hierarchical models and [model choice](https://bayesiancomputationbook.com/markdown/chp_04.html). 
- Bias-Variance tradeoff - For an intuitive explanation, watch [lecture 8, slides](https://work.caltech.edu/lectures.html). See how this [tradeoff needs an update](https://www.bradyneal.com/bias-variance-tradeoff-textbooks-update) for the modern machine learning. 

:::

There are cases when the problem is in sampling and one common cause, besides mis-specification, are models with bad posterior geometry (from the perspective of samplers). As a rule of thumb "round and smooth" is good. A prevalent solution in literature is to use better parametrizations, but in order to fix your problem, you first have to be aware that it might be the case.

[These examples in 2D are intuitive, however things become much more complicated and counterintuitive in multidimensional parameter spaces. The long story short, in practice, is to use heavier regularization (via stronger priors) in those cases.]{.aside}

::: {.callout-warning}
## Bad posterior geometry. Reparametrization

- Technical: (mu, sigma) - Neal's Funnel [numpyro](https://num.pyro.ai/en/stable/examples/funnel.html), there is equivalent pymc
- More solutions in numpyro for bad [posterior geometry](https://num.pyro.ai/en/stable/tutorials/bad_posterior_geometry.html)
:::

::: {.callout-note}
## Regularization and Variable Selection

A big topic in ML is regularization and encouraging sparse solutions (models). The point is that in highly-dimensional spaces, only a small subset of variables is relevant. Bayesians have sneaky methods of constructing prior which act as a mechanism for variable selection.

There is an additional topic of robuts methods (to outliers). Some machine learning models are robust(ish) out of the box: quantile regression, gradient boosted trees. Bayesians use heavier-tailed distribution to achieve a similar effect.

- [Spike and Slab kaggle](https://www.kaggle.com/code/melondonkey/bayesian-spike-and-slab-in-pymc3/notebook)
- [Horseshoe prior](https://austinrochford.com/posts/2021-05-29-horseshoe-pymc3.html) pymc3
- [Robust LR](https://bambinos.github.io/bambi/notebooks/t_regression.html), bambi, simulated data, also is in pymc
:::


I can't resist to suggest a case-study from finance, the good old portfolio returns optimization. The methods used in practice are much more sophisticated than the below, but it's useful to be aware of the fundamentals. The Wishart distribution, used as a prior for positive semi-definite matrices (covariation), can be an useful building block in more complicated models to capture the covariation structure, let's say, from different time series. 

[As a very advanced aside, I am fascinated by Michael I. Jordan's approach to multidimensional time series modeling, where the covariation structure is evolving in time.]{.aside}

::: {.callout-tip}
## Portfolio optimization a la Markowitz

- Technical: Wishart and Portfolios from [BMH](https://nbviewer.org/github/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter6_Priorities/Ch6_Priors_PyMC3.ipynb) -- can also do optimization ala markowitz, but with uncertainty from posteriors
:::

If you got to this last topic, probably months have passed. There are a reason universities dedicate entire semesters for regression -- there are so many nuances to get right, from both practical and theoretical perspective. One of these complexities is how to handle missing data, which deserves a course on its own.

::: {.callout-warning}
## Modeling how Data goes Missing

In Bayesian Statistics, we also have to be very explicit and declare our assumptions about how the data went missing -- which is a hard, but beneficial thing to do. The good news -- missingness is treated like an unobserved variable and is subject to the same inferences we've been doing before. We just need to pick the right model of missingness for each individual case.

- Missing data imputation, [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/Missing_Data_Imputation.html), both for linear and hierarchical
- Discrete missing data imputation [numpyro](https://num.pyro.ai/en/stable/tutorials/discrete_imputation.html), with simulated data and causal graphs
- Pymcon - missing data [tutorial](https://gist.github.com/junpenglao/7c505c6c76f99c928a4e2c1161cff43a) in pymc3
- [Missing Data Imputation](http://stronginference.com/missing-data-imputation.html)
:::



## Generalized Linear Models

Not every phenomena we model is continuous or appropriate for gaussian linear regression, but we can easily extend it with the building blocks we learned at the beginning. It's all about those link functions and relaxing some of the assumptions of the linear regression. I want to point out how the following mirrors the simple, single-variable models we first practiced on.

[I do not want to make the transition from gaussian case to logistic, poisson and other variants sound trivial. Their behavior, evaluation, and interpretation is different and distinct. You can not equivocate them.]{.aside}

As a theoretical background of what connects these models into one single family, hence the name of GLMs, I suggest you read the section in the "Beyond MLR" about the [exponential family](https://bookdown.org/roback/bookdown-BeyondMLR/ch-glms.html). Richard McElreath has similar information-theoretic arguments in his lectures on Statistical Rethinking.

::: {.callout-note}
## Logistic Regression

As a fun aside about ML, logistic regression is the only model which is calibrated out-of-the-box, meaning the scores for the classification can be interpreted as probabilities, due to its specific loss function. 

For the rest of the cases, you would need to calibrate via an isotonic or piecewise-linear regression, on a separate, validation dataset. So, going back to the practice, here are some examples using the logistic regression:

- Beetles survival by concentration of chemical, via [bambi](https://bambinos.github.io/bambi/notebooks/alternative_links_binary.html) -- tries out different link functions and is a simple example to get started with.
- Vote intention by age in the U.S., via [bambi](https://bambinos.github.io/bambi/notebooks/logistic_regression.html), 2016 ANES data, 1200 samples.
- Socio-economic influences on income bracket ($\ge \$50k$), also does model comparison, implementation in [bambi](https://bambinos.github.io/bambi/notebooks/model_comparison.html)
- Multinomial regression [iris](https://bambinos.github.io/bambi/notebooks/categorical_regression.html), via bambi, with the most boring dataset, but you'll see that you have a solution for the multiclass classification without the multiple comparisons.
:::

When you have a numeric target variable, think twice if it is appropriate for the gaussian distribution. Sometimes, what we model is really, counts, or non-negative, or monotonically increasing with respect to a $X_i$ (that alone deserves its own case-study). Sometimes, even poisson doesn't work out due to overdispersion or zero-inflation, and it is not a rare exception, especially when modeling aspects of customer behavior.

::: {.callout-note}
## Poisson Regression

- [Number of laws](https://www.bayesrulesbook.com/chapter-12.html) regarding equality, which includes a discussion for the issue of overdispersion. Not sure at all that this would be a prototypical DGP story for a Poisson.
- Stop and frisk data from BDA3 and RoS, the [frequentist version](https://omarfsosa.github.io/poisson_regression_in_python)
- [Campus crime](https://bookdown.org/roback/bookdown-BeyondMLR/ch-poissonreg.html) and estimating household size in Philippines from BeyondMLR.
- [Alcohol and meds interaction](https://www.pymc.io/projects/examples/en/latest/generalized_linear_models/GLM-poisson-regression.html), with simulated data.
:::

::: {.callout-note}
## Overdispersion. Negative Binomial. Zero-Inflation

The negative binomial distribution is often found in customer behavior, in contractual or non-contractual settings, when it comes to purchases, subscription renewals.

- [Cockroaches and pest management](https://avehtari.github.io/ROS-Examples/Roaches/roaches.html), where Negative-Binomial, Poisson and Zero-Inflated NBD is investigated.
- [Fishing catches in a park](https://num.pyro.ai/en/stable/examples/zero_inflated_poisson.html), in numpyro
- [Students' absence](https://bambinos.github.io/bambi/notebooks/negative_binomial.html), UCLA data, application of negative binomial, written in bambi
:::

In the [probability fundamentals](01_fundamentals/stat_foundations.qmd) section, we discussed the use-case of estimating proportions and named the field of compositional data analysis. It is often found in practice, but disguises itself, which causes the wrong method to be applied.

[If you encountered such a problem, when you care about proportions, mix of stuff, or compositions, not their absolute values or quantities, you can check out [these lecture notes](http://www.sediment.uni-goettingen.de/staff/tolosana/extra/CoDa.pdf) ]{.aside}


::: {.callout-note}
## Proportions. Compositional Data Analysis

[Dirichlet regression](https://joshuacook.netlify.app/post/dirichlet-regression-pymc/), pymc3 - fake proportions dataset, but take some real ones from compositional data analysis books

:::




## Hierarchical GLMs

::: {.callout-note}
## Hierarchical Gaussian Regression

- Radon: Primary code reference: [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/multilevel_modeling.html) - A Primer on Bayesian Methods for Multilevel Modeling
	- [bambinos](https://bambinos.github.io/bambi/notebooks/radon_example.html) a higher level API, models the log-radon
	- [Omar Sosa - Practical introduction to Bayesian hierarchical modeling](https://github.com/omarfsosa/tech-talk-hierarchical-models) with numpyro
	- [McStanPy](https://mc-stan.org/users/documentation/case-studies/radon_cmdstanpy_plotnine.html) implementation
- [Bayesian Multilevel Regression](https://num.pyro.ai/en/stable/tutorials/bayesian_hierarchical_linear_regression.html) numpyro, linear regression [OSIC Pulmonary Fibrosis Progression](https://www.kaggle.com/c/osic-pulmonary-fibrosis-progression)
- BeyondMLR [stage anxiety music performers](https://bookdown.org/roback/bookdown-BeyondMLR/ch-multilevelintro.html#cs:music)
- Stack facial feedback hypothesis, re-analysis, ctx replication crisis, via [bambi](https://bambinos.github.io/bambi/notebooks/Strack_RRR_re_analysis.html) -- full workflow, with iteration
:::

::: {.callout-note}
## Longitudinal Data and Studies
- [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/longitudinal_models.html) longitudinal data with drinking teens, alcohol consumption per cohorts, in time
- [Sleepstudy and reaction times](https://bambinos.github.io/bambi/notebooks/sleepstudy.html) bambi, by subject
	- Same idea in [pig growth study](https://bambinos.github.io/bambi/notebooks/multi-level_regression.html)
- Beyond MLR [charter schools longitudinal](https://bookdown.org/roback/bookdown-BeyondMLR/ch-lon.html#cs:charter)
:::

::: {.callout-note}
## Hierarchical Logistic Regression

- Beyond MLR logistic, college basketball referee foul differential [here](https://bookdown.org/roback/bookdown-BeyondMLR/ch-GLMM.html#cs:refs)
- [Graduate Admissions](https://num.pyro.ai/en/stable/examples/ucbadmit.html), from McElreath,  UC Berkeley in Fall 1973 (numpyro)
	- point to pymc port of rethinking
- item-response nba fouls rasch (pymc) with nba data, [pymc](https://www.pymc.io/projects/examples/en/latest/case_studies/item_response_nba.html)
:::


::: {.callout-note}
## Hierarchical Poisson Regression

- [Airbnb number of reviews](https://www.bayesrulesbook.com/chapter-18.html#hierarchical-poisson-negative-binomial-regression)
- Estimating the strength of a [rugby team](https://www.pymc.io/projects/examples/en/latest/case_studies/rugby_analytics.html)
- [Paper investigating seat-belt use rates](https://onlinelibrary.wiley.com/doi/full/10.1002/sta4.544), with data probably taken from the department of transportation [crashes website](https://crashstats.nhtsa.dot.gov/#!/)
:::

::: {.callout-note}
## Models with 3 Levels

- Beyond MLR [3-level seed germination](https://bookdown.org/roback/bookdown-BeyondMLR/ch-3level.html#cs:seeds)
:::


## Bayesian Machine Learning

::: {.callout-note}
## Bayesian Additive Regression Trees

- [BART](https://bayesiancomputationbook.com/markdown/chp_07.html) from osvaldo, on bike shares
- [Podcast Episode](https://learnbayesstats.com/episode/80-bayesian-additive-regression-trees-sameer-deshpande/) and an [R package](https://github.com/skdeshpande91/flexBART in R)
- Nonparametric methods -  what is the benefit, name a few equivalents. Be able to explain a signed-rank transformation. [This](https://steverxd.github.io/Stat_tests/) is the simplest and the most accessible explanation I know of so far.

:::


::: {.callout-note}
## Gaussian Processes

- Gelman: [Birthdays](https://omarfsosa.github.io/speedy_gaussian_processes), hilbert space approximation [repo](https://github.com/omarfsosa/hsgp), also in [stan](https://avehtari.github.io/casestudies/Birthdays/birthdays.html)

:::



## Bibliography

```yml
- title : Bayesian Data Analysis
  title_short: bda3
  type: book
  edition: 3
  author: Andrew Gelman
  year: 2013
  link: http://www.stat.columbia.edu/~gelman/book/
  lectures: https://avehtari.github.io/BDA_course_Aalto/Aalto2022.html

- title: Bayesian Methods for Hackers
  title_short: bmh
  type: book
  edition: 1
  author: Cameron Davidson
  year: 2015
  link: https://dataorigami.net/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/
  github: https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers

- title: Statistical Rethinking
  title_short: rethinking
  type: book
  edition: 2
  author: Richard McElreath
  year: 2021
  link: https://xcelab.net/rm/statistical-rethinking/
  lectures: https://github.com/rmcelreath/stat_rethinking_2023

- title: The Most Dangerous Equation
  title_short: danger-eqn
  type: article
  author: Howard Wainer
  year: 2009
  link: http://assets.press.princeton.edu/chapters/s8863.pdf

- title : Introduction to Probability
  title_short: probability-blitzstein
  type: book
  edition: 2
  author: Joe Blitzstein
  year: 2019
  link: https://projects.iq.harvard.edu/stat110/home
  lectures: https://projects.iq.harvard.edu/stat110/youtube
```